#!/usr/bin/env python2
# "git make/mail diff":
# - this is for use after you commit to your local master (or elsewhere)
#   with formal commit message, and want to mail your change out for reviewe
# - with no args, review diff/commit-msg email
# - with any args, send diff/commit-msg email
# - note that ansidiff is sometimes slow (blame marcel, or make it better)
#   - i'm not convinced php was a good choice for ansidiff

import cmd_util as cu
import os
import subprocess as spc
import sys

args = sys.argv[1:]
mode = 'term'
rev = None
cmd_args = []
for arg in args:
    if arg in ('mail', 'html'):
        mode = arg
    else:
        if rev != None:
            print >> sys.stderr, 'usage: git make-diff [REV_NUMBER] [mail]'
            sys.exit(-1)
        rev = arg
        cmd_args.append(arg)
if rev == None:
    rev = 'HEAD'

cmd_log = 'git log -1'
if cmd_args:
    cmd_log += ' ' + ' '.join(cu.arg_esc(arg) for arg in cmd_args)
p = spc.Popen(cmd_log, shell=True, stdout=spc.PIPE)
p.wait()
commit_lines = [l[4:] for l in p.stdout.readlines()[4:]]

cmd = cmd_log + " | grep -oP '(?<=  Reviewed [bB]y: ).*'"
p = spc.Popen(cmd, shell=True, stdout=spc.PIPE)
p.wait()
ls = p.stdout.readlines()
rs = []
if not ls:
    print >> sys.stderr, 'WARNING, NO REVIEWERS FOUND'
elif len(ls) != 1:
    print >> sys.stderr, 'WEIRD OUTPUT EXTRACTING REVIEWERS: '
    print >> sys.stderr, ls
else:
    rs = ls[0][:-1].split(', ')
# you might be on a weird machine as a weird user
# at least let you set an env var to deal
user = os.environ.get('FBUSER')
if not user:
    user = os.environ.get('USER')
rs.append(user)

s = 'diff:' + commit_lines[0][:-1]

commit_msg = ''.join(commit_lines)

cmd = "git show " + rev + " | ansidiff.py"
if mode == 'mail':
    cmd += " | htmail -s " + cu.arg_esc(s) + " " + \
        " ".join([cu.arg_esc(r) for r in rs])
elif mode == 'html':
    pass
else:
    # could use $PAGER here, but no one can really be trusted with -R stuff
    cmd += " term | less -R"
    # visual header for the start of the commit message and diff
    print '-----------------------------------------------------'
#print cmd
spc.Popen(cmd, shell=True).wait()
