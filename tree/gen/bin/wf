#!/usr/bin/env python3

# window focuser

from optparse import OptionParser
from socket import gethostname
import cmd_util as cu
import os

usage = 'usage: ./wf [options] <window-abbr>'
opt_p = OptionParser(usage)
opt_p.add_option('-z', '--hide', action='store_true',
    help='hide instead of switch-to')
opt_p.add_option('-v', '--verbose', action='store_true',
    help='display the underlying wmctrl commands')
(opts, args) = opt_p.parse_args()

if opts.hide:
    wmctrl_action = '-z'
else:
    wmctrl_action = '-a'

a, = args

if a[0] in ('a', 'q'):
    if a[0] == 'a':
        pref = 'h'
    else:
        pref = 'l'
    a = a[1:]
else:
    pref = ''

# duplicates wmv stuff?
a_map = {
    'r': 'a1',
    's': 'a2',
    't': 'a3',
    'w': 'arora',
    'f': 'firefox',
    'b': 'Tor Browser',
    'c': 'chromium',
    'N': 'NOTIFIEROMG',
    'p': 'pdf',  # evince doesn't put pdf or anything in title, hm
    'k': 'Anki',
    'Q': 'Quod Libet',
}

title = pref + a_map[a]

def wf(args):
    cmd = ['wmctrl'] + args
    if opts.verbose:
        print("Running: " + cu.cmd_str(cmd))
    cu.cmd_wait(cmd, can_fail=True)

# hack to keep tiny window aligned with last full window
#if a == 's':
#    wf(["-r", a_map['t'], "-b", "add,above"])
#if a != 'r' and a != 's':
    wf(["-r", a_map['t'], "-b", "remove,above"])

if a == 'N':
    # notifier window can have this set
    wf(["-r", title, "-b", "remove,below"])

wf([wmctrl_action, title])
