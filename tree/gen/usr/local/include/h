{-# LANGUAGE BangPatterns #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TemplateHaskell #-}
import Control.Applicative hiding ((<|>))
import qualified Control.Applicative as App
import Control.Arrow
import qualified Control.Concurrent as Conc
import Control.DeepSeq
import Control.Exception
--import qualified Control.Foldl as Fdl
import Control.Monad
import Control.Monad.Except
import Control.Monad.Identity
--import qualified Control.Monad.Memo as MMemo
import Control.Monad.Random
import Control.Monad.ST
import Control.Monad.Trans.Resource
import Control.Parallel
import Control.Parallel.Strategies
--import Control.Wire hiding ((<>), unless)
--import qualified Control.Wire as Wire
--import qualified Data.Array.Repa as R
--import Data.Array.Repa ((:.))
--import Data.Array.Repa ((:.), Z, U, DIM0, DIM1, DIM2, DIM3, DIM4, DIM5)
import qualified Data.Aeson as Ae
import Data.Binary
import Data.Bits
import qualified Data.ByteString as BS
import qualified Data.ByteString.Lazy as BSL
import qualified Data.ByteString.Lazy.Char8 as BSLC
import qualified Data.ByteString.Lazy.Search as BSLS
import qualified Data.ByteString.Char8 as BSC
import qualified Data.ByteString.UTF8 as BSU
import qualified Data.ByteString.Lazy.UTF8 as BSLU
import Data.Char
import Data.Conduit
import qualified Data.Conduit.Binary as CB
import qualified Data.Conduit.Combinators as CC
import qualified Data.Conduit.List as CL
import qualified Data.Conduit.Text as CT
--import qualified Data.Conduit.Util as CU
--import qualified Data.DateTime as DTi
--import Data.Either.Unwrap
import Data.Either
import Data.Fixed
import qualified Data.Foldable as Fold
import Data.Function hiding ((.), id)
import qualified Data.HashMap.Lazy as HML
import qualified Data.HashMap.Strict as HMS
import qualified Data.HashSet as HSet
import Data.Int
import qualified Data.IntMap as IntMap
import Data.List
import qualified Data.List.Split as Spl
--import qualified Data.ListLike as LL
--import Data.ListLike.Text
--import Data.ListLike.Vector
import qualified Data.Map as Map
import qualified Data.Map.Strict as SMap
import Data.Maybe
--import qualified Data.MemoCombinators as Memo
import Data.Monoid
--import qualified Data.MultiSet as MSet
--import Data.Numbers.Primes
import Data.Ord
import Data.Ratio
import qualified Data.Serialize as Ser
import Data.Set (Set)
import qualified Data.Set as S
import qualified Data.Set as Set
import Data.String.Utils
import qualified Data.Text as DT
import qualified Data.Text.Encoding as DTE
import qualified Data.Text.IO as DTI
import qualified Data.Text.Lazy as DTL
import qualified Data.Text.Lazy.IO as DTLI
import Data.Time
import Data.Time.Calendar.WeekDate
import Data.Time.Clock.POSIX
import Data.Time.Clock.TAI
import qualified Data.Traversable as Trav
import qualified Data.Tree as Tree
--import qualified Data.Trie as BST
--import qualified Data.Trie.Convenience as BSTC
import qualified Data.Vector as Vec
import qualified Data.Vector.Mutable as MVec
import qualified Data.Vector.Storable as SVec
import qualified Data.Vector.Storable.Mutable as MSVec
import qualified Data.Vector.Unboxed as UVec
import qualified Data.Vector.Unboxed.Mutable as MUVec
import Debug.Trace
import Euterpea as Eut
import GHC.Generics
--import qualified Haskore.Basic.Pitch as HBP
--import Haskore.Basic.Duration hiding (Ratio)
--import Haskore.Melody.Standard hiding (f)
--import Haskore.Music.GeneralMIDI as MidiMus hiding (transpose)
--import qualified Haskore.Music as Mus
--import Haskore.Interface.MIDI.Render
import HSH
import Language.Haskell.TH
import MajMemSys
--import qualified Math.Combinatorics.Binomial as Binom
--import Network.HTTP.Conduit
import Numeric
--import Prelude hiding ((.), id)
import Prelude
import Safe
import System.Directory
import System.Environment
import System.Exit
import System.FilePath
import System.IO
import System.Process
import System.Posix hiding (createDirectory)
import System.Random
import qualified System.Random.MWC as MWC
import qualified Test.QuickCheck as QC
import qualified Text.ParserCombinators.Parsec as Psec
import qualified Text.HTML.TagSoup as TS
import Text.Printf
import Text.Regex.Posix
import qualified Text.XML.Light as TXL
import qualified Text.XHtml as TXH
